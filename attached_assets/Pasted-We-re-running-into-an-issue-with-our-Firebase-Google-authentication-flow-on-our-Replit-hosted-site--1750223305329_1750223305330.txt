We're running into an issue with our Firebase Google authentication flow on our Replit-hosted site (https://trucks.ammaar.repl.co). After a user clicks "Sign in with Google", the redirect to the Google sign-in page works, but after completing authentication, the user is returned to the login page (/login) without being logged in. No errors are shown in the console, and Firebase does not persist the user session.

🔍 What we’ve verified:
Firebase is correctly initialized in firebase.ts with environment variables from import.meta.env.

We're using signInWithRedirect() and getRedirectResult() with browserSessionPersistence.

We enforce @ufl.edu domain validation.

The auth state is being tracked in a custom React context (useAuth) using onAuthStateChanged().

The login page includes a redirect on successful auth (using window.location.replace('/profile')).

Firebase logs show successful redirect authentication, but the user is not persisted in auth.currentUser after redirection.

This behavior is only happening on Replit deployment. The exact same flow works correctly in local development (localhost).

🔁 Repro steps:
Visit: https://trucks.ammaar.repl.co/login

Click “Sign in with Google”

Complete sign-in with a valid @ufl.edu account

You are redirected back to the same login page and not logged in

🔧 Suspected Causes:
Session persistence (browserSessionPersistence) may not be working properly on Replit’s deployment environment due to:

Iframe sandboxing / cookie restrictions?

HTTPS / secure context issues?

Storage isolation across redirects?

🔑 Key Files in Codebase:
firebase.ts: Firebase init with getAuth, getRedirectResult, signInWithRedirect, and session persistence

use-auth-new.tsx: Auth state and redirect result handling

login.tsx: Google sign-in button and redirect logic

App.tsx: Protected routes and route switching using Wouter

Can you help us debug or configure Replit properly so that Firebase redirect-based login works as expected on the deployed domain?

Thanks!

